<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.duyi.onlinevideo.dao.UserDao">
    <!-- 字段映射 -->
    <resultMap id="userMap" type="User">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="vip_flag" property="vipFlag" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <!-- 表查询字段 -->
    <sql id="allColumns">
        u.id, u.mobile, u.username, u.password, u.email, u.vip_flag, u.create_time
    </sql>

    <!-- 查询所有数据 -->
    <select id="findUserAll" resultMap="userMap">
        SELECT
        <include refid="allColumns" />
        FROM user u
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM user u WHERE 1 = 1
        <if test="mobile != null and mobile != ''">
            AND u.mobile LIKE CONCAT('%', #{mobile}, '%')
        </if>
        <if test="username != null and username != ''">
            AND u.username LIKE CONCAT('%', #{username}, '%')
        </if>
        <if test="password != null and password != ''">
            AND u.password LIKE CONCAT('%', #{password}, '%')
        </if>
        <if test="email != null and email != ''">
            AND u.email LIKE CONCAT('%', #{email}, '%')
        </if>
        <if test="vip_flag != null">
            AND u.vip_flag = #{vip_flag}
        </if>
        <if test="createTime != null">
            AND u.create_time = #{createTime}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findUserByIds" resultMap="userMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM user u WHERE u.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertUser" parameterType="user">
        INSERT INTO user (
            id, mobile, username, password, email, vip_flag, create_time
        ) VALUES (
            #{id},
            #{mobile},
            #{username},
            #{password},
            #{email},
            #{vipFlag},
            #{createTime}
        )
    </insert>

    <!-- 批量修改数据 -->
    <update id="updateUsers" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE user
            <set>
                <if test="item.mobile != null">
                    mobile = #{item.mobile},
                </if>
                <if test="item.username != null">
                    username = #{item.username},
                </if>
                <if test="item.password != null">
                    password = #{item.password},
                </if>
                <if test="item.email != null">
                    email = #{item.email},
                </if>
                <if test="item.vipFlag != null">
                    vip_flag = #{item.vipFlag},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键删除数据 -->
    <delete id="deleteUserById" parameterType="int">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!-- 根据主键批量删除数据 -->
    <delete id="deleteUserByIds" parameterType="list">
        DELETE FROM user WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>